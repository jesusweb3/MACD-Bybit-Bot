# src/bot/handlers/start/start.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from src.bot.keyboards.start_menu import get_start_menu, get_back_to_start_menu
from src.database.database import db
from src.utils.logger import logger
from src.utils.config import config

router = Router()


@router.message(CommandStart())
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if not config.is_user_allowed(message.from_user.id):
        logger.warning(
            f"Unauthorized access attempt from user {message.from_user.id} (@{message.from_user.username}) - ignored silently")
        return

    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db.get_or_create_user(
        telegram_id=message.from_user.id,
        username=message.from_user.username
    )

    welcome_text = (
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "ü§ñ –≠—Ç–æ —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç –¥–ª—è Bybit\n"
        "üìä –ë–æ—Ç –±—É–¥–µ—Ç —Ç–æ—Ä–≥–æ–≤–∞—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫\n\n"
        "‚öôÔ∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª"
    )

    await message.answer(welcome_text, reply_markup=get_start_menu())
    logger.info(f"User {message.from_user.id} started bot")


@router.callback_query(F.data == "start_menu")
async def start_menu_callback(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º—É –º–µ–Ω—é"""
    # –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if not config.is_user_allowed(callback.from_user.id):
        logger.warning(f"Unauthorized callback from user {callback.from_user.id} - ignored silently")
        return  # –ù–∏–∫–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ callback

    await callback.message.edit_text(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_start_menu()
    )
    await callback.answer()


# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏
@router.callback_query(F.data == "trade_menu")
async def trade_menu_callback(callback: CallbackQuery):
    """–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –º–µ–Ω—é"""
    if not config.is_user_allowed(callback.from_user.id):
        logger.warning(f"Unauthorized callback from user {callback.from_user.id} - ignored silently")
        return

    await callback.message.edit_text(
        "üìà –¢–æ—Ä–≥–æ–≤–æ–µ –º–µ–Ω—é\n\n"
        "üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n"
        "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ—Ä–≥–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏!",
        reply_markup=get_back_to_start_menu()
    )
    await callback.answer()


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
async def return_to_start_menu(callback: CallbackQuery, message: str = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é

    Args:
        callback: CallbackQuery –æ–±—ä–µ–∫—Ç
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.message.edit_text(
        message,
        reply_markup=get_start_menu()
    )
    await callback.answer()