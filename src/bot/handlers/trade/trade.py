# src/bot/handlers/trade/trade.py
from aiogram import Router, F
from aiogram.types import CallbackQuery
from src.bot.keyboards.trade_menu import (
    get_trade_menu,
    get_strategy_menu,
    get_strategy_confirm_menu,
    get_active_trading_menu,
    get_statistics_menu,
    get_balance_menu,
    get_back_to_trade_menu,
    get_trade_history_menu
)
from ...utils.trade_utils import TradeBotUtils
from src.utils.logger import logger
from src.utils.config import config
from src.database.database import db

router = Router()


@router.callback_query(F.data == "trade_menu")
async def trade_menu(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ —Ç–æ—Ä–≥–æ–≤–æ–µ –º–µ–Ω—é"""
    if not config.is_user_allowed(callback.from_user.id):
        logger.warning(f"Unauthorized callback from user {callback.from_user.id} - ignored silently")
        return

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω–æ—Ç—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_info = TradeBotUtils.check_settings_completeness(callback.from_user.id)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –º–µ–Ω—é
        menu_text = TradeBotUtils.get_trade_menu_text(callback.from_user.id)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å —É—á–µ—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        await callback.message.edit_text(
            menu_text,
            reply_markup=get_trade_menu(settings_info['complete']),
            parse_mode='HTML'
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ trade_menu: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –º–µ–Ω—é", show_alert=True)


@router.callback_query(F.data == "trade_strategy_blocked")
async def strategy_blocked(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ - —Ç–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    # –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ù–ï –º–µ–Ω—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    await callback.answer("üîí –ó–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º", show_alert=True)


@router.callback_query(F.data == "trade_strategy_menu")
async def strategy_menu(callback: CallbackQuery):
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings_info = TradeBotUtils.check_settings_completeness(callback.from_user.id)

    if not settings_info['complete']:
        # –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ—Å—Ç–∞–µ–º—Å—è –≤ –º–µ–Ω—é
        await callback.answer("üîí –ó–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º", show_alert=True)
        return

    strategy_text = TradeBotUtils.get_strategy_menu_text()

    await callback.message.edit_text(
        strategy_text,
        reply_markup=get_strategy_menu(),
        parse_mode='HTML'
    )
    await callback.answer()


@router.callback_query(F.data.startswith("strategy_"))
async def strategy_selected(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    strategy_name = callback.data.replace("strategy_", "")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—â–µ —Ä–∞–∑
    settings_info = TradeBotUtils.check_settings_completeness(callback.from_user.id)

    if not settings_info['complete']:
        await callback.answer("üîí –ó–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º", show_alert=True)
        return

    # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è MACD Full - –Ω—É–∂–Ω—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã
    if strategy_name == "macd_full":
        user_settings = db.get_user_settings(callback.from_user.id)
        entry_tf = user_settings.get('entry_timeframe') if user_settings else None
        exit_tf = user_settings.get('exit_timeframe') if user_settings else None

        if entry_tf != exit_tf:
            await callback.answer("‚ö†Ô∏è –î–ª—è MACD Full –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¢–§ –¥–ª—è –≤—Ö–æ–¥–∞ –∏ –≤—ã—Ö–æ–¥–∞", show_alert=True)
            return

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    confirm_text = TradeBotUtils.get_strategy_confirm_text(strategy_name, callback.from_user.id)

    await callback.message.edit_text(
        confirm_text,
        reply_markup=get_strategy_confirm_menu(strategy_name),
        parse_mode='HTML'
    )
    await callback.answer(f"–°—Ç—Ä–∞—Ç–µ–≥–∏—è {strategy_name} –≤—ã–±—Ä–∞–Ω–∞")


@router.callback_query(F.data.startswith("start_trading_"))
async def start_trading(callback: CallbackQuery):
    """–ó–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–ª–∏ (–∑–∞–≥–ª—É—à–∫–∞)"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    strategy_name = callback.data.replace("start_trading_", "")

    # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
    await callback.message.edit_text(
        f"üöÄ <b>–¢–æ—Ä–≥–æ–≤–ª—è –∑–∞–ø—É—â–µ–Ω–∞!</b>\n\n"
        f"üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {strategy_name}\n"
        f"‚è≥ –°—Ç–∞—Ç—É—Å: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...\n\n"
        f"üîÑ <i>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>",
        reply_markup=get_back_to_trade_menu(),
        parse_mode='HTML'
    )
    await callback.answer("üöÄ –¢–æ—Ä–≥–æ–≤–ª—è –∑–∞–ø—É—â–µ–Ω–∞ (–¥–µ–º–æ —Ä–µ–∂–∏–º)")

    logger.info(f"User {callback.from_user.id} started trading with strategy: {strategy_name}")


@router.callback_query(F.data == "trade_statistics")
async def trade_statistics(callback: CallbackQuery):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    stats_text = TradeBotUtils.get_statistics_text(callback.from_user.id)

    await callback.message.edit_text(
        stats_text,
        reply_markup=get_statistics_menu(),
        parse_mode='HTML'
    )
    await callback.answer()


@router.callback_query(F.data == "trade_balance")
async def trade_balance(callback: CallbackQuery):
    """–ë–∞–ª–∞–Ω—Å —Å—á—ë—Ç–∞"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    balance_text = TradeBotUtils.get_balance_text(callback.from_user.id)

    await callback.message.edit_text(
        balance_text,
        reply_markup=get_balance_menu(),
        parse_mode='HTML'
    )
    await callback.answer()


@router.callback_query(F.data == "trade_history")
async def trade_history(callback: CallbackQuery):
    """–ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.message.edit_text(
        "üìã <b>–ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫</b>\n\n"
        "üìù <i>–°–¥–µ–ª–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</i>\n\n"
        "üöß <i>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>\n\n"
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è:\n"
        "‚Ä¢ –í—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏\n"
        "‚Ä¢ –î–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
        "‚Ä¢ –§–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–∞–º\n"
        "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
        reply_markup=get_trade_history_menu(),
        parse_mode='HTML'
    )
    await callback.answer()


@router.callback_query(F.data == "refresh_trade_history")
async def refresh_trade_history(callback: CallbackQuery):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–¥–µ–ª–æ–∫"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.answer("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏...")

    await callback.message.edit_text(
        "üìã <b>–ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫</b>\n\n"
        "üìù <i>–°–¥–µ–ª–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</i>\n\n"
        "üöß <i>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>\n\n"
        "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è:\n"
        "‚Ä¢ –í—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏\n"
        "‚Ä¢ –î–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
        "‚Ä¢ –§–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–∞–º\n"
        "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
        reply_markup=get_trade_history_menu(),
        parse_mode='HTML'
    )


@router.callback_query(F.data == "refresh_balance")
async def refresh_balance(callback: CallbackQuery):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ (–∑–∞–≥–ª—É—à–∫–∞)"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    await callback.answer("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞...")

    balance_text = TradeBotUtils.get_balance_text(callback.from_user.id)

    await callback.message.edit_text(
        balance_text,
        reply_markup=get_balance_menu(),
        parse_mode='HTML'
    )


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–∏—Ö callback'–æ–≤
@router.callback_query(F.data.in_([
    "stop_trading",
    "active_trading_menu"
]))
async def trading_placeholder(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.answer("üöß –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)