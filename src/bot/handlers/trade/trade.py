# src/bot/handlers/trade/trade.py
from aiogram import Router, F
from aiogram.types import CallbackQuery
from src.bot.keyboards.trade_menu import (
    get_trade_menu,
    get_strategies_menu,
    get_positions_menu,
    get_back_to_trade_menu
)
from src.bot.keyboards.start_menu import get_back_to_start_menu
from src.utils.logger import logger
from src.utils.config import config

router = Router()

@router.callback_query(F.data == "trade_menu")
async def trade_menu(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ —Ç–æ—Ä–≥–æ–≤–æ–µ –º–µ–Ω—é"""
    if not config.is_user_allowed(callback.from_user.id):
        logger.warning(f"Unauthorized callback from user {callback.from_user.id} - ignored silently")
        return

    try:
        await callback.message.edit_text(
            "üìà –¢–æ—Ä–≥–æ–≤–æ–µ –º–µ–Ω—é\n\n"
            "üöß –†–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n"
            "–í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
            "‚Ä¢ MACD —Ç–æ—Ä–≥–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏—è–º–∏\n"
            "‚Ä¢ –¢–æ—Ä–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫",
            reply_markup=get_trade_menu()
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ trade_menu: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –º–µ–Ω—é", show_alert=True)


# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
@router.callback_query(F.data == "strategies_placeholder")
async def strategies_placeholder(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∞ –º–µ–Ω—é —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.message.edit_text(
        "üéØ –¢–æ—Ä–≥–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n\n"
        "üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n\n"
        "üìä MACD Full - —Ç–æ—Ä–≥–æ–≤–ª—è –≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã\n"
        "üìà MACD Long - —Ç–æ–ª—å–∫–æ –ø–æ–∫—É–ø–∫–∏\n"
        "üìâ MACD Short - —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–∂–∏\n\n"
        "–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!",
        reply_markup=get_strategies_menu()
    )
    await callback.answer()


@router.callback_query(F.data.in_([
    "strategy_full_placeholder",
    "strategy_long_placeholder",
    "strategy_short_placeholder"
]))
async def strategy_placeholder(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    strategy_names = {
        "strategy_full_placeholder": "MACD Full",
        "strategy_long_placeholder": "MACD Long",
        "strategy_short_placeholder": "MACD Short"
    }

    strategy_name = strategy_names.get(callback.data, "–°—Ç—Ä–∞—Ç–µ–≥–∏—è")

    await callback.answer(f"üöß {strategy_name} —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –ø–æ–∑–∏—Ü–∏–π
@router.callback_query(F.data == "positions_placeholder")
async def positions_placeholder(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∞ –º–µ–Ω—é –ø–æ–∑–∏—Ü–∏–π"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.message.edit_text(
        "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏—è–º–∏\n\n"
        "üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n\n"
        "üîÑ –¢–µ–∫—É—â–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏\n"
        "üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π\n"
        "‚ö° –ë—ã—Å—Ç—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–∑–∏—Ü–∏–π\n"
        "üìà –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TP/SL\n\n"
        "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π!",
        reply_markup=get_positions_menu()
    )
    await callback.answer()


@router.callback_query(F.data.in_([
    "current_positions_placeholder",
    "positions_history_placeholder"
]))
async def position_details_placeholder(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –ø–æ–∑–∏—Ü–∏–π"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    details = {
        "current_positions_placeholder": "–¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏",
        "positions_history_placeholder": "–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∑–∏—Ü–∏–π"
    }

    detail_name = details.get(callback.data, "–ü–æ–∑–∏—Ü–∏–∏")
    await callback.answer(f"üöß {detail_name} –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏–∏
@router.callback_query(F.data == "stats_placeholder")
async def stats_placeholder(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.message.edit_text(
        "üìä –¢–æ—Ä–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
        "üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n\n"
        "üí∞ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫\n"
        "üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫\n"
        "üéØ –õ—É—á—à–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n"
        "üìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º\n"
        "üìã –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã\n\n"
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏!",
        reply_markup=get_back_to_trade_menu()
    )
    await callback.answer()


@router.callback_query(F.data == "history_placeholder")
async def history_placeholder(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.message.edit_text(
        "üìã –ò—Å—Ç–æ—Ä–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏\n\n"
        "üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n\n"
        "üìù –ñ—É—Ä–Ω–∞–ª –≤—Å–µ—Ö —Å–¥–µ–ª–æ–∫\n"
        "üîç –§–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–∞–º\n"
        "üíπ –î–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–π —Å–¥–µ–ª–∫–∏\n"
        "üìä –ì—Ä–∞—Ñ–∏–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n"
        "üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö\n\n"
        "–ò—Å—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!",
        reply_markup=get_back_to_trade_menu()
    )
    await callback.answer()


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö callback'–æ–≤
@router.callback_query(F.data.endswith("_placeholder"))
async def universal_placeholder(callback: CallbackQuery):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞"""
    if not config.is_user_allowed(callback.from_user.id):
        return

    await callback.answer("üöß –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)