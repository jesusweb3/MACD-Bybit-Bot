# src/bot/utils/trade_utils.py
from typing import Dict, Any, Optional
from ...database.database import db
from ...utils.logger import logger


class TradeBotStatus:
    """–°—Ç–∞—Ç—É—Å—ã —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞"""
    WAITING = "waiting"  # –û–∂–∏–¥–∞–µ—Ç –∑–∞–ø—É—Å–∫–∞
    TRADING = "trading"  # –ê–∫—Ç–∏–≤–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è
    STOPPED = "stopped"  # –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    ERROR = "error"  # –û—à–∏–±–∫–∞


class TradeBotUtils:
    """–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞"""

    @staticmethod
    def check_settings_completeness(telegram_id: int) -> Dict[str, Any]:
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            Dict —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        """
        user_settings = db.get_user_settings(telegram_id)

        if not user_settings:
            return {
                'complete': False,
                'missing_count': 8,
                'total_count': 8,
                'missing_settings': [
                    'API –∫–ª—é—á–∏', '–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞', '–ü–ª–µ—á–æ', '–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏',
                    'TP/SL', '–¢–§ –≤—Ö–æ–¥–∞', '–¢–§ –≤—ã—Ö–æ–¥–∞', '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã'
                ]
            }

        missing_settings = []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
        if not (user_settings.get('bybit_api_key') and user_settings.get('bybit_secret_key')):
            missing_settings.append('API –∫–ª—é—á–∏')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—Ä–≥–æ–≤—É—é –ø–∞—Ä—É
        if not user_settings.get('trading_pair'):
            missing_settings.append('–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–µ—á–æ
        if not user_settings.get('leverage'):
            missing_settings.append('–ü–ª–µ—á–æ')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏
        position_size_info = db.get_position_size_info(telegram_id)
        if not position_size_info.get('value') or position_size_info.get('value') <= 0:
            missing_settings.append('–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º TP/SL (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
        tp_sl_info = db.get_tp_sl_info(telegram_id)
        if tp_sl_info['enabled'] and not (tp_sl_info['take_profit'] and tp_sl_info['stop_loss']):
            missing_settings.append('TP/SL')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã
        if not user_settings.get('entry_timeframe'):
            missing_settings.append('–¢–§ –≤—Ö–æ–¥–∞')

        if not user_settings.get('exit_timeframe'):
            missing_settings.append('–¢–§ –≤—ã—Ö–æ–¥–∞')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
        if not user_settings.get('bot_duration_hours'):
            missing_settings.append('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã')

        total_count = 8
        missing_count = len(missing_settings)
        complete = missing_count == 0

        return {
            'complete': complete,
            'missing_count': missing_count,
            'total_count': total_count,
            'missing_settings': missing_settings,
            'progress': total_count - missing_count
        }

    @staticmethod
    def get_trade_menu_text(telegram_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –º–µ–Ω—é"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings_info = TradeBotUtils.check_settings_completeness(telegram_id)

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_settings = db.get_user_settings(telegram_id)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
        if settings_info['complete']:
            settings_status = "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
            settings_emoji = "üü¢"
        else:
            settings_status = f"‚ùå –ù–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã ({settings_info['progress']}/{settings_info['total_count']})"
            settings_emoji = "üî¥"

        # –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
        bot_status = "‚è≥ –û–∂–∏–¥–∞–µ—Ç –∑–∞–ø—É—Å–∫–∞"

        # –¢–µ–∫—É—â–∞—è —Ç–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞
        trading_pair = user_settings.get('trading_pair', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞') if user_settings else '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'

        # –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
        active_positions = 0

        text = (
            f"ü§ñ <b>–¢–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç MACD</b>\n\n"
            f"üìä <b>–°—Ç–∞—Ç—É—Å:</b> {bot_status}\n"
            f"{settings_emoji} <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏:</b> {settings_status}\n\n"
            f"üí∞ <b>–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞:</b> {trading_pair}\n"
            f"üìà <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏:</b> {active_positions}\n\n"
        )

        if not settings_info['complete']:
            text += (
                f"‚ö†Ô∏è <b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
            )
            for i, setting in enumerate(settings_info['missing_settings'][:3], 1):
                text += f"  {i}. {setting}\n"

            if len(settings_info['missing_settings']) > 3:
                text += f"  ... –∏ –µ—â—ë {len(settings_info['missing_settings']) - 3}\n"

            text += f"\nüí° –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"
        else:
            text += f"üéØ <b>–ì–æ—Ç–æ–≤ –∫ —Ç–æ—Ä–≥–æ–≤–ª–µ!</b> –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞."

        return text

    @staticmethod
    def get_strategy_menu_text() -> str:
        """–¢–µ–∫—Å—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
        return (
            f"üéØ <b>–í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ MACD</b>\n\n"
            f"üìä <b>MACD Full</b> - —Ç–æ—Ä–≥–æ–≤–ª—è –≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã\n"
            f"   ‚Ä¢ –ü–æ–∫—É–ø–∫–∏ –ø—Ä–∏ –±—ã—á—å–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–∏\n"
            f"   ‚Ä¢ –ü—Ä–æ–¥–∞–∂–∏ –ø—Ä–∏ –º–µ–¥–≤–µ–∂—å–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–∏\n\n"
            f"üìà <b>MACD Long</b> - —Ç–æ–ª—å–∫–æ –ø–æ–∫—É–ø–∫–∏\n"
            f"   ‚Ä¢ –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π\n"
            f"   ‚Ä¢ –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ —Å–∏–≥–Ω–∞–ª–∞–º –≤—ã—Ö–æ–¥–∞\n\n"
            f"üìâ <b>MACD Short</b> - —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–∂–∏\n"
            f"   ‚Ä¢ –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø–æ–∑–∏—Ü–∏–π\n"
            f"   ‚Ä¢ –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ —Å–∏–≥–Ω–∞–ª–∞–º –≤—ã—Ö–æ–¥–∞\n\n"
            f"üí° –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è –≤–∞—à–µ–≥–æ —Å—Ç–∏–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏"
        )

    @staticmethod
    def get_strategy_confirm_text(strategy_name: str, telegram_id: int) -> str:
        """–¢–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""

        strategy_names = {
            'macd_full': 'MACD Full (Long + Short)',
            'macd_long': 'MACD Long Only',
            'macd_short': 'MACD Short Only'
        }

        strategy_display = strategy_names.get(strategy_name, strategy_name)

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_settings = db.get_user_settings(telegram_id)

        if not user_settings:
            return "‚ùå –û—à–∏–±–∫–∞: –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        trading_pair = user_settings.get('trading_pair', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
        leverage = user_settings.get('leverage', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
        entry_tf = user_settings.get('entry_timeframe', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
        exit_tf = user_settings.get('exit_timeframe', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
        duration = user_settings.get('bot_duration_hours', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')

        # –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏
        position_size_info = db.get_position_size_info(telegram_id)
        position_size = position_size_info.get('display', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

        # TP/SL
        tp_sl_info = db.get_tp_sl_info(telegram_id)
        tp_sl_status = tp_sl_info.get('display', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')

        text = (
            f"üöÄ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞</b>\n\n"
            f"üéØ <b>–°—Ç—Ä–∞—Ç–µ–≥–∏—è:</b> {strategy_display}\n\n"
            f"<b>üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ—Ä–≥–æ–≤–ª–∏:</b>\n"
            f"üí∞ –ü–∞—Ä–∞: {trading_pair}\n"
            f"‚ö° –ü–ª–µ—á–æ: {leverage}x\n"
            f"üìä –†–∞–∑–º–µ—Ä: {position_size}\n"
            f"‚öôÔ∏è TP/SL: {tp_sl_status}\n"
            f"‚è±Ô∏è –í—Ö–æ–¥: {entry_tf} | –í—ã—Ö–æ–¥: {exit_tf}\n"
            f"üïí –†–∞–±–æ—Ç–∞: {duration}—á\n\n"
            f"‚ùó <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç –±—É–¥–µ—Ç —Ç–æ—Ä–≥–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!\n"
            f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
        )

        return text

    @staticmethod
    def get_statistics_text(telegram_id: int) -> str:
        """–¢–µ–∫—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏"""
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞, –≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        return (
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏</b>\n\n"
            f"üí∞ <b>–û–±—â–∏–π P&L:</b> +0.00 USDT\n"
            f"üìà <b>–ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫:</b> 0 –∏–∑ 0 (0%)\n"
            f"üìâ <b>–£–±—ã—Ç–æ—á–Ω—ã—Ö —Å–¥–µ–ª–æ–∫:</b> 0 –∏–∑ 0 (0%)\n"
            f"‚è±Ô∏è <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> 00:00:00\n"
            f"üéØ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–≥–Ω–∞–ª:</b> –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n"
            f"üíπ <b>–õ—É—á—à–∞—è —Å–¥–µ–ª–∫–∞:</b> +0.00 USDT\n"
            f"üìâ <b>–•—É–¥—à–∞—è —Å–¥–µ–ª–∫–∞:</b> -0.00 USDT\n\n"
            f"üìà <b>–ê–∫—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è:</b> –ù–µ –∑–∞–ø—É—â–µ–Ω–∞\n"
            f"üîÑ <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</b> –û–∂–∏–¥–∞–µ—Ç –∑–∞–ø—É—Å–∫–∞"
        )

    @staticmethod
    def get_balance_text(telegram_id: int) -> str:
        """–¢–µ–∫—Å—Ç –±–∞–ª–∞–Ω—Å–∞ —Å—á—ë—Ç–∞"""
        user_settings = db.get_user_settings(telegram_id)
        trading_pair = user_settings.get('trading_pair', 'BTCUSDT') if user_settings else 'BTCUSDT'

        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞, –≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ Bybit API
        return (
            f"üí∞ <b>–ë–∞–ª–∞–Ω—Å —Å—á—ë—Ç–∞ Bybit</b>\n\n"
            f"üíµ <b>–û–±—â–∏–π –±–∞–ª–∞–Ω—Å:</b> 0.00 USDT\n"
            f"‚úÖ <b>–î–æ—Å—Ç—É–ø–Ω–æ:</b> 0.00 USDT\n"
            f"üîí <b>–í –ø–æ–∑–∏—Ü–∏—è—Ö:</b> 0.00 USDT\n"
            f"üìä <b>–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π P&L:</b> +0.00 USDT\n\n"
            f"üìà <b>–¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞:</b> {trading_pair}\n"
            f"‚ö° <b>–û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π:</b> 0\n\n"
            f"üîÑ <i>–û–±–Ω–æ–≤–ª–µ–Ω–æ: —Ç–æ–ª—å–∫–æ —á—Ç–æ</i>\n\n"
            f"‚ö†Ô∏è <i>–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞\n"
            f"–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π</i>"
        )

    @staticmethod
    def get_blocked_strategy_text() -> str:
        """–¢–µ–∫—Å—Ç –ø—Ä–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
        return (
            f"üîí <b>–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</b>\n\n"
            f"‚ùå –ù–µ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã\n\n"
            f"<b>–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º –∑–∞–≤–µ—Ä—à–∏—Ç–µ:</b>\n"
            f"1. –ù–∞—Å—Ç—Ä–æ–π–∫—É API –∫–ª—é—á–µ–π\n"
            f"2. –í—ã–±–æ—Ä —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—Ä—ã\n"
            f"3. –£—Å—Ç–∞–Ω–æ–≤–∫—É –ø–ª–µ—á–∞\n"
            f"4. –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏\n"
            f"5. –¢–∞–π–º—Ñ—Ä–µ–π–º—ã –≤—Ö–æ–¥–∞ –∏ –≤—ã—Ö–æ–¥–∞\n"
            f"6. –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞\n\n"
            f"üí° –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"
        )