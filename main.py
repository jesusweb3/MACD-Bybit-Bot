# main.py
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from src.utils.config import config
from src.utils.logger import logger
from src.utils.helpers import format_msk_time
from src.database.database import db

# –ò–º–ø–æ—Ä—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from src.bot.handlers.start import start
from src.bot.handlers.settings import settings
from src.bot.handlers.trade import trade


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    if not config.telegram_token:
        logger.error("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return

    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    bot = Bot(token=config.telegram_token)
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.include_router(start.router)
    dp.include_router(settings.router)
    dp.include_router(trade.router)

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db.create_tables()

    start_time_msk = format_msk_time()
    logger.info(f"üöÄ MACD –±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ {start_time_msk} –ú–°–ö...")

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        await dp.start_polling(bot, skip_updates=True)
    except KeyboardInterrupt:
        logger.info("üîÑ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (Ctrl+C)...")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        from src.strategy import strategy_manager
        if strategy_manager.get_active_strategies_count() > 0:
            active_count = strategy_manager.get_active_strategies_count()
            logger.info(f"‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {active_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π...")
            await strategy_manager.stop_all_strategies("Bot shutdown")

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.session.close()

        stop_time_msk = format_msk_time()
        logger.info(f"üëã MACD –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ {stop_time_msk} –ú–°–ö")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –í—ã—Ö–æ–¥ –ø–æ Ctrl+C")
    except Exception as e:
        logger.error(f"‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        exit(1)